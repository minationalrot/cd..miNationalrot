
variables:
  Parameters.RestoreBuildProjects: miNationalrot.sln
  BuildConfiguration: Release
  Git_PAT: $(System.AccessToken)

stages:
- stage: Build    
  jobs:
  - job: Build
    pool:
      #name: Hosted Windows 2019 with VS2019
      name: Default

    steps:
   
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk 3.0.100-preview6-012264'
      inputs:
        version: 3.0.100-preview6-012264

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '$(Parameters.RestoreBuildProjects)'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '$(Parameters.RestoreBuildProjects)'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '$(Parameters.TestProjects)'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
        artifactName: 'drop' 

- stage: Deploy
  jobs:
   - job: Deploy
     pool:
      #name: Hosted Windows 2019 with VS2019
      name: Default

     steps:

      - task: DownloadBuildArtifacts@0
        displayName: Download Build Artifacts to '$(System.ArtifactsDirectory)'
        inputs:
          artifactName: 'drop'
          downloadPath: '$(System.ArtifactsDirectory)' 

      - task: ExtractFiles@1
        displayName: 'Extract files'
        inputs:
          archiveFilePatterns: '$(System.ArtifactsDirectory)\*.zip' 
          #destinationFolder: '$(build.artifactstagingdirectory)\disttmp'
          destinationFolder: $(Build.ArtifactStagingDirectory)

      - script: |
          rem cd $(build.artifactstagingdirectory)\disttmp\minationalrot\dist
          rem echo git init...
          rem git init
          rem echo git add...
          git add .
          echo git commit...
          git commit -m "Push force azure-deploy ***NO_CI***"
          echo git remote add...
          echo GAT '$(System.AccessToken)'
          rem git config credential.https://github.com/minationalrot/miNationalrot.RemoOser \RemoOser
          rem git config user.email remo.oser@osisa.com
          rem git config user.name RemoOser
          rem https://miNationalrot@dev.azure.com/miNationalrot/miNationalrot/_git/miNationalrot
          rem git remote add origin https://miNationalrot@dev.azure.com/miNationalrot/miNationalrot/_git/miNationalrot
          rem git remote add origin https://RemoOser:25b8d6180428e6d7c052399d5ceb08cfdab3cbb5@github.com/minationalrot/miNationalrot.git
          rem git remote add origin https://miNationalrot@dev.azure.com/miNationalrot/miNationalrot/_git/miNationalrot
          rem echo git push...
          git push --force origin master:gh-pages
        displayName: deploy to gh-pages

      # - task: GitHubPagesPublish@1
      #   inputs:
      #     docPath: '$(build.artifactstagingdirectory)\disttmp\minationalrot\dist\*'
      #     branchname: 'gh-pages'
      #     commitmessage: 'Automated Release $(Release.ReleaseId) ***NO_CI***'
      #     githubusername: RemoOser
      #     githubemail: remo.oser@osisa.com
      #     githubaccesstoken: 5171ab8bd3135ed3b04f6d54d2c902abaf639f28
      #     repositoryname: miNationalrot

      # - task: AccidentalFish.githubpages-publish.AccidentalFish.GitHubPages-Publish.GitHubPagesPublish@1
      #   displayName: 'Publishes to GitHub Pages'
      #   inputs:
      #     docPath: '$(build.artifactstagingdirectory)\disttmp'
      #     githubusername: miNationalrot
      #     githubemail: 'remo.oser@osisa.com'
      #     githubaccesstoken: 25b8d6180428e6d7c052399d5ceb08cfdab3cbb5
      #     repositoryname: miNationalrot
      #     branchname: master