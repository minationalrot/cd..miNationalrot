name: $(TeamProject)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yy).$(Date:MMdd)$(Rev:.r)
variables:
  - group: GitHubPATGroup
  - name: SolutionFile
    value: miNationalrot.sln
  - name: BuildConfiguration 
    value: Release
  - name: VersionPrefix
    value: '0'
  - name: BuildYear
    value: $[format('{0:yy}', pipeline.startTime)]
  - name: BuildDate
    value: $[format('{0:MMdd}', pipeline.startTime)]
  - name: Revision
    value: 0
  - name: VersionExt
    value: '0.0.0.0'
      
stages:
- stage: Build3    
  jobs:
  - job: DotNetBuild
    pool:
      #name: Hosted Windows 2019 with VS2019
      name: Default

    steps:
    - powershell: |
        $buildNumber = $Env:BUILD_BUILDNUMBER
        $revision=$buildNumber.Substring($buildNumber.LastIndexOf('.') + 1)
        Write-Host "##vso[task.setvariable variable=Revision;]$revision"
      displayName: Get Revision Number

    - powershell: |
        $version='{0}.{1}.{2}.{3}' -f $(VersionPrefix) , $(BuildYear) , $(BuildDate), $(Revision)
        Write-Host "##vso[task.setvariable variable=VersionExt;]$version"
      displayName: Get Version Number
        
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk 3.0.100-preview7-012821'
      inputs:
        version: 3.0.100-preview7-012821

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '$(SolutionFile)'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '$(SolutionFile)'
        arguments: '--configuration $(BuildConfiguration) /p:Version=$(VersionExt)'

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '$(Parameters.TestProjects)'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory) --no-build'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
        artifactName: 'drop' 

    - script: |
        echo $PAT
        git config --global user.name "$NAME"
        git config --global user.email "$EMAIL"
        cd $(build.artifactstagingdirectory)/minationalrot/dist
        git init
        git checkout -b gh-pages
        git add -A
        git commit -m "Create build $(Build.BuildId)"
        rem git push -f https://$PAT@github.com/fernandreu/blazor-pages.git gh-pages
        git push -f https://$PAT@github.com/minationalrot/miNationalrot.git gh-pages
      displayName: 'Publish to GitHub Pages'
      env:
        PAT: $(github_pat2)