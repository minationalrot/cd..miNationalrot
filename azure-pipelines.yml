name: $(TeamProject)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
variables:
  SolutionFile: miNationalrot.sln
  BuildConfiguration: Release
  VersionPrefix: '0.1'
  B2:  $[variables['major']]
  BuildNumber: $[format('{0:yyyyMMdd}', pipeline.startTime)]
  Revision:  $(Rev:.r)

stages:
- stage: Build    
  jobs:
  - job: Build
    pool:
      #name: Hosted Windows 2019 with VS2019
      name: Default

    steps:
    - script: |
        echo $(BuildNumber)
        echo $(B2)
        echo $(Rev:.r)

    - script: |
        
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk 3.0.100-preview6-012264'
      inputs:
        version: 3.0.100-preview6-012264

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '$(SolutionFile)'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '$(SolutionFile)'
        arguments: '--configuration $(BuildConfiguration) /p:Version=$(VersionPrefix).$(BuildNumber).$(Revision)'

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '$(Parameters.TestProjects)'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
        artifactName: 'drop' 

- stage: Deploy
  jobs:
   - job: Deploy
     pool:
      #name: Hosted Windows 2019 with VS2019
      name: Default

     steps:

      - task: DownloadBuildArtifacts@0
        displayName: Download Build Artifacts to '$(System.ArtifactsDirectory)'
        inputs:
          artifactName: 'drop'
          downloadPath: '$(System.ArtifactsDirectory)' 

      - task: ExtractFiles@1
        displayName: 'Extract files'
        inputs:
          archiveFilePatterns: '$(System.ArtifactsDirectory)\*.zip' 
          destinationFolder: '$(build.artifactstagingdirectory)\disttmp'
          #destinationFolder: $(System.DefaultWorkingDirectory)
      
      - checkout: self
        persistCredentials: 'true'

      - script: |
          git checkout gh-pages
          git update-ref HEAD gh-pages
          git remote add origin https://miNationalrot@dev.azure.com/miNationalrot/miNationalrot/_git/miNationalrot
          git rm . -r
          xcopy $(build.artifactstagingdirectory)\disttmp\minationalrot\dist $(System.DefaultWorkingDirectory)\ /s
          git add .
          echo git commit...
          git commit -m "Push force azure-deploy ***NO_CI***"
          echo git remote add...
          echo Version '$(Version)'
          git push --force origin gh-pages
        displayName: deploy to gh-pages